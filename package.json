{
  "name": "web-app",
  "private": true,
  "version": "0.1.1",
  "description": "An atomic starter project for Leean",
  "repository": {
    "type": "git",
    "url": "https://github.com/moxie-lean/web-app"
  },
  "license": "MIT",
  "devDependencies": {
    "aliasify": "^1.9.0",
    "autoprefixer": "^6.3.3",
    "babel-preset-es2015": "^6.5.0",
    "babelify": "^7.2.0",
    "bower": "^1.3.1",
    "browser-sync": "^2.11.1",
    "browserify": "^13.0.0",
    "browserify-shim": "^3.8.12",
    "eslint": "^1.10.3",
    "eslint-plugin-angular": "^0.15.0",
    "gulp": "^3.9.0",
    "gulp-angular-templatecache": "^1.8.0",
    "gulp-env": "^0.4.0",
    "gulp-ng-annotate": "^2.0.0",
    "gulp-ng-constant": "^1.1.0",
    "gulp-uglify": "^1.5.3",
    "json-server": "^0.8.8",
    "ln-cms": "^0.4.6",
    "ln-filters": "^0.4.2",
    "ln-patternlab": "^0.1.3",
    "node-sass": "^3.4.2",
    "npm-run-all": "^1.5.1",
    "onchange": "^2.0.0",
    "postcss-cli": "^2.5.1",
    "sass-lint": "^1.5.0",
    "shelljs": "^0.2.6",
    "stringify": "^4.0.1",
    "vinyl-buffer": "^1.0.0",
    "vinyl-source-stream": "^1.1.0",
    "watchify": "^3.7.0"
  },
  "browserify": {
    "transform": [
      "babelify",
      "browserify-shim",
      "stringify",
      "aliasify"
    ]
  },
  "browserify-shim": {
    "jQuery": "global:jQuery",
    "angular": "global:angular"
  },
  "aliasify": {
    "aliases": {
      "atoms": "./app/atoms",
      "molecules": "./app/molecules",
      "organisms": "./app/organisms",
      "template": "./app/templates",
      "components": "./app/components",
      "default-link": "ln-cms/default-link"
    }
  },
  "scripts": {
    "set-up": "bower install && mkdir -p public/js public/css public/img && npm run dev",
    "json-server": "json-server --watch config/json/db.json --port 3000 --static ./htdocs",
    "start": "browser-sync start --port 8000 --server public --files 'public/*.html, public/css/*.css, public/js/*.js'",
    "ci": "npm run js:ci -s && npm run styles:ci -s",
    "dev": "npm run patterns:build && npm run config:dev && npm run js:dev && npm run styles:dev && npm run templates:dev",
    "staging": "npm run patterns:build && npm run config:staging && npm run js:build && npm run styles:build && npm run templates:build",
    "build": "npm run patterns:build && npm run config:build && npm run js:build && npm run styles:build && npm run templates:build",
    "watch": "npm run dev && npm-run-all -p js:watch styles:watch templates:watch config:watch",
    "js:ci": "eslint app/\\*\\*/\\*.js",
    "js": "npm run js:dev",
    "js:dev": "gulp js:dev",
    "js:build": "gulp js:build",
    "js:watch": "gulp js:watch",
    "styles": "npm run styles:dev",
    "styles:ci": "sass-lint app/\\*\\*/\\*.scss -v -q",
    "styles:dev": "node-sass app/style.scss -o public/css/ --source-map-embed && npm run styles:autoprefix",
    "styles:build": "node-sass app/style.scss --output-style compressed -o public/css/ && npm run styles:autoprefix",
    "styles:watch": "onchange app/\\*\\*/\\*.scss -- npm run styles:dev",
    "styles:autoprefix": "postcss -u autoprefixer -r public/css/style.css",
    "templates:dev": "gulp templates",
    "templates:build": "gulp templates",
    "templates:watch": "onchange app/\\*\\*/\\*.html -- npm run templates:dev",
    "config:dev": "gulp config:dev",
    "config:staging": "gulp config:staging",
    "config:build": "gulp config:build",
    "config:watch": "onchange config/\\*.json -- npm-run-all -s patterns:build config:dev js:dev",
    "patterns:build": "ln-patterns"
  }
}
